import org.apache.tools.ant.filters.ReplaceTokens
import org.eu.awesomekalin.jta.mod.BuildTools

plugins {
    id "net.minecraftforge.gradle" version "+"
    id "org.spongepowered.mixin" version "+"
}

repositories {
    mavenCentral()
    maven { url = 'https://maven.maxhenkel.de/repository/public' }
    maven {
        name = "Illusive Soulworks maven"
        url = "https://maven.theillusivec4.top/"
    }
}

final BuildTools buildTools = new BuildTools(minecraftVersion, "forge", project)

minecraft {
    mappings channel: "official", version: minecraftVersion
    accessTransformer = file("src/main/resources/META-INF/accesstransformer.cfg")
    runs {
        configureEach {
            property "forge.logging.markers", "REGISTRIES"
            property "forge.logging.console.level", "debug"
        }
        client {
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "./build/createSrgToMcp/output.srg"
        }
        server { args "--nogui" }
    }
}

sourceSets.main.resources { srcDir "src/generated/resources" }

dependencies {
    minecraft "net.minecraftforge:forge:${minecraftVersion}-${buildTools.getForgeVersion()}"
    implementation fg.deobf("org.mtr:MTR-forge:${mtrVersion}+${minecraftVersion}-server")
    annotationProcessor "org.spongepowered:mixin:+:processor"
    implementation fg.deobf("de.maxhenkel.voicechat:voicechat-api:${buildTools.getVoiceChatVersion()}")
    compileOnly(fg.deobf("top.theillusivec4.curios:curios-forge:${buildTools.getCuriosVersion()}:api"))
    runtimeOnly(fg.deobf("top.theillusivec4.curios:curios-forge:${buildTools.getCuriosVersion()}"))
    implementation fg.deobf("software.bernie.geckolib:geckolib-forge-${buildTools.getGeckolibVersion()}")
}

mixin {
    add sourceSets.main, "mtr.refmap.json"
    config "mtr.mixins.json"
    debug.verbose = true
    debug.export = true
}

java {
    toolchain {
        languageVersion.set(JavaLanguageVersion.of(buildTools.javaLanguageVersion))
    }
    withSourcesJar()
    withJavadocJar()
}

tasks.register("setupFiles") {
    if (!minecraftVersion.trim().equalsIgnoreCase('1.17.1') && !minecraftVersion.trim().equalsIgnoreCase('1.18.2') && !minecraftVersion.trim().equalsIgnoreCase('1.19.2')) {
        copy {
            outputs.upToDateWhen { false }
            from "src/main/mods.template.toml"
            into "src/main/resources/META-INF"
            filter(ReplaceTokens, tokens: ["minecraft": minecraftVersion, "version": version, "geckolib": "", "curios": buildTools.getCuriosVersion()])
            rename "(.+).template.toml", "\$1.toml"
        }
    } else {
        copy {
            outputs.upToDateWhen { false }
            from "src/main/mods.template.toml"
            into "src/main/resources/META-INF"
            filter(ReplaceTokens, tokens: ["minecraft": minecraftVersion, "version": version, "geckolib": "3", "curios": buildTools.getCuriosVersion()])
            rename "(.+).template.toml", "\$1.toml"
        }
    }

    delete fileTree("src/main/java/org/mtr/mod")
    delete fileTree("src/main/java/org/eu/awesomekalin/jta/mod")
    delete fileTree("src/main/resources/assets")
    delete fileTree("src/main/resources/data")

    copy {
        outputs.upToDateWhen { false }
        from "../fabric/src/main/java/org/mtr/mod"
        into "src/main/java/org/mtr/mod"
    }

    copy {
        outputs.upToDateWhen { false }
        from "../fabric/src/main/java/org/eu/awesomekalin/jta/mod"
        into "src/main/java/org/eu/awesomekalin/jta/mod"
    }

    copy {
        outputs.upToDateWhen { false }
        from "../fabric/src/main/resources/assets"
        into "src/main/resources/assets"
    }

    copy {
        outputs.upToDateWhen { false }
        from "../fabric/src/main/resources/data"
        into "src/main/resources/data"
    }

    if (!minecraftVersion.trim().equalsIgnoreCase('1.20.4') && !minecraftVersion.trim().equalsIgnoreCase('1.20.1')) {
        delete("src/main/java/org/eu/awesomekalin/jta/init/PlayerActionHandler.java")
        copy {
            outputs.upToDateWhen { false }
            from "../forge-version-dependant/PlayerActionHandler.java"
            into "src/main/java/org/eu/awesomekalin/jta/init"
        }

        if (!minecraftVersion.trim().equalsIgnoreCase('1.19.4')) {
            delete fileTree("src/main/java/org/eu/awesomekalin/jta/client/model")

            copy {
                outputs.upToDateWhen { false }
                from "../geckolib3/org/eu/awesomekalin/jta/platform-forge/client/model"
                into "src/main/java/org/eu/awesomekalin/jta/platform/client/model"
            }

            if (!minecraftVersion.trim().equalsIgnoreCase('1.19.2')) {
                delete ("src/main/java/org/eu/awesomekalin/jta/init/PlayerActionHandler.java")
                delete ("src/main/java/org/eu/awesomekalin/jta/init/ServerTickHandler.java")
                delete ("src/main/java/org/eu/awesomekalin/jta/init/MainForge.java")

                copy {
                    outputs.upToDateWhen { false }
                    from "../pre-1.19/forge/PlayerActionHandler.java"
                    into "src/main/java/org/eu/awesomekalin/jta/init"
                }

                copy {
                    outputs.upToDateWhen { false }
                    from "../pre-1.19/forge/MainForge.java"
                    into "src/main/java/org/eu/awesomekalin/jta/init"
                }
            }
        }
    }

    if (minecraftVersion.trim().equalsIgnoreCase("1.18.2") || minecraftVersion.trim().equalsIgnoreCase("1.17.1")) {
        delete fileTree("src/main/java/org/eu/awesomekalin/jta/platform/client/model")

        copy {
            outputs.upToDateWhen { false }
            from "../pre-1.19/forge/client/model"
            into "src/main/java/org/eu/awesomekalin/jta/platform/client/model"
        }
    }
}

build {
    doLast {
        buildTools.copyBuildFile()
    }
}